#! /usr/bin/env bash

. "$HOME"/.config/printacle/rc.d/*

canonical_line_filter() {
  local line=$1
  # TODO: parse line, normalize whitespace,
  # filter comments
  echo "$line"
}

file_sha256 () {
  sha256sum "$1" | cut -b-64 # | tr [a-f] [A-F]
}

dos_shortname () {
  # NOTE: we presume we have no collisions in the first three bytes
  echo "$(file_sha256 "$1" | cut -b-6)~1.gco"
}

check_file_exists () {
  curl -fsX HEAD "$SDCARD_ADDRESS/$(file_sha256 "$1").gcode"
}

upload_file () {
  curl -T "$1" "$SDCARD_ADDRESS/$(file_sha256 "$1").upload" >/dev/null
  curl -H "Destination: $SDCARD_ADDRESS/$(file_sha256 "$1").gcode" \
    -X MOVE "$SDCARD_ADDRESS/$(file_sha256 "$1").upload"
}

encode_newlines () {
  read -r line
  echo -n "$line"
  while read -r line; do echo -n "\\n$line"; done
}

json_stringify () {
  # without assuming the user has jq or anything like that
  echo -n '"'
  echo "$1" | sed 's/['\''"\\]/\\&/g
  s/\t/\\t/g
  s/\r/\\r/g
  s/\f/\\f/g
  s/\x08/\\b/g' | encode_newlines
  echo '"'
}

send_gcode_to_printer () {
  curl -H "X-Api-Key: $OCTOPRINT_API_KEY" \
    -X POST "$OCTOPRINT_ADDRESS/api/printer/command" \
    -H "Content-Type: application/json" \
    -d '{"command":'"$(json_stringify "$1")"'}'
}

print_sdcard_file () {
  send_gcode_to_printer M32\ "$(dos_shortname "$1")"
}

is_falsy () {
  case ${1,,} in
    no|false|0) return 0 ;;
    *) return 1 ;;
  esac
}

printacle_print_file () {
  # if file hasn't been uploaded (TODO: canonical or input)
  if ! check_file_exists "$1"; then
    # start preheating
    if ! is_falsy "$PRINTACLE_PREHEAT_UPLOAD_BEFORE_PRINT"; then
      printacle_preheat_file "$1"
    fi
    # start the upload of the (TODO: canonical) gcode
    upload_file "$1"
  fi
  # TODO: check how many files are on the SD card,
  # remove any

  # issue the command to OctoPrint to print that file
  print_sdcard_file "$1"
  # (TODO: uploads the source, if requested, with trailing "; canonical-sha256: " comment)
}

send_first_gcode () {
  if grep -qi "^$2" "$1"
  then send_gcode_to_printer "$(grep -im1 "^$2" "$1")"
  fi
}

printacle_preheat_file () {
  send_first_gcode "$1" M104
  send_first_gcode "$1" M140
}

case $1 in
  preheat)
    # preheats for given gcode file
    printacle_preheat_file "$2"
    # TODO: material/temperatures if specified in options
    # off sets all temperatures to 0
  ;;
  upload)
    # optionally preprocesses the file into its canonical form and uploads either
    # both (if both are not present) or just the canonical one
    # --force ignores presence checks
    # TODO: check for presence
    upload_file "$1"
  ;;
  check)
    # --full downloads a file and makes sure it has the same hash
    # --exist just does an HTTP 200 HEAD check
    # --size would probably be the best compormise, but I think it requires
    # a bit too much WebDAV fanciness to request
    # maybe once that's implemented, it can be the default, and until then,
    # there's no default
  ;;
  print)
    # TODO: parse --hash to allow for printing without specifying a file
    printacle_print_file "$2"
  ;;
  command)
    send_gcode_to_printer "$2"
  ;;
  config)
    if [[ $2 == "init" ]]
    then mkdir -p "$HOME/.config/printacle/rc.d"
    else
      echo "config only supports 'init' as an option right now" >&2
      exit 1
    fi
  ;;
  status)
    # TODO
  ;;
  stop|cancel)
    # stops
  ;;
  cleanup)
    # deletes files
    # maybe takes a list of files to hold on stdin
  ;;
  help|*)
    echo <<EOM
usage:
  coordinated commands:
    printacle print <filename>

  printer control commands:
    printacle preheat <filename>
    printacle command <gcode>

  file storage commands:
    printacle upload <filename>

  configuration commands:
    printacle config init
EOM
  ;;
esac
